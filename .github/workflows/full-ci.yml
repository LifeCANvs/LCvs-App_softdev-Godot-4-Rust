# Copyright (c) godot-rust; Bromeon and contributors.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

name: Full CI
#
# Runs before merging. Rebases on master to make sure CI passes for latest integration, not only for the PR at the time of creation.

on:
  merge_group:
  push:


env:
  GDEXT_FEATURES: ''
  RETRY: ${{ github.workspace }}/.github/other/retry.sh

  # ASan options: https://github.com/google/sanitizers/wiki/AddressSanitizerFlags
  # LSan options: https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer
  # * report_objects: list individual leaked objects when running LeakSanitizer
  LSAN_OPTIONS: report_objects=1

  CARGO_DENY_VERSION: "0.15.1"
  CARGO_MACHETE_VERSION: "0.6.2"


defaults:
  run:
    shell: bash

# If a new commit is pushed before the old one's CI has completed (on the same branch), abort previous run
#concurrency:
#  group: ${{ github.head_ref }}
#  cancel-in-progress: true

jobs:
  # For complex matrix workflow, see https://stackoverflow.com/a/65434401
  godot-itest:
    name: godot-itest (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    timeout-minutes: 24
    strategy:
      fail-fast: false # cancel all jobs as soon as one fails?
      matrix:
        # Naming: {os}[-{runtimeVersion}]-{apiVersion}
        # runtimeVersion = version of Godot binary; apiVersion = version of GDExtension API against which gdext is compiled.

        # Config overview (see job for details).
        #
        # Cross-platform:
        # - Base version:     Godot nightly, no custom
        # - Double precision: Godot nightly, custom (bindgen), double
        # - 4.2 compat:       Godot 4.2
        #
        # Linux-only:
        # - Full:             Godot nightly, full codegen
        # - Double + lazy:    Godot nightly, custom, double, lazy func tables
        # - Features + exp:   Godot nightly, custom, threads, serde, experimental API
        # - Memcheck nightly: Godot mem nightly, custom, sanitizer
        # - Memcheck 4.x:     Godot mem 4.0/4.1, sanitizer

        # Note: Windows uses '--target x86_64-pc-windows-msvc' by default as Cargo argument.
        include:
          # macOS -- for the unintuitive naming, see https://github.com/actions/runner-images?tab=readme-ov-file#available-images

          - name: windows-00
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-01
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-02
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-03
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-04
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-05
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-06
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-07
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-08
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-09
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-10
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-11
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-12
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-13
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-14
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-15
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-16
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-17
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-18
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true
          - name: windows-19
            os: windows-latest
            artifact-name: windows-nightly
            godot-binary: godot.windows.editor.dev.x86_64.exe
            with-hot-reload: true



    steps:
      - uses: actions/checkout@v4
#
#      - name: "Run Godot integration test"
#        uses: ./.github/composite/godot-itest
#        with:
#          artifact-name: godot-${{ matrix.artifact-name }}
#          godot-binary: ${{ matrix.godot-binary }}
#          godot-args: ${{ matrix.godot-args }} # currently unused
#          godot-prebuilt-patch: ${{ matrix.godot-prebuilt-patch }}
#          rust-extra-args: ${{ matrix.rust-extra-args }}
#          rust-toolchain: ${{ matrix.rust-toolchain || 'stable' }}
#          rust-env-rustflags: ${{ matrix.rust-env-rustflags }}
#          rust-target: ${{ matrix.rust-target }}
#          rust-cache-key: ${{ matrix.rust-cache-key }}
#          with-llvm: ${{ contains(matrix.name, 'macos') && contains(matrix.rust-extra-args, 'api-custom') }}
#          godot-check-header: ${{ matrix.godot-check-header }}
#
      - name: "Build and test hot-reload"
        if: ${{ matrix.with-hot-reload }}
        working-directory: examples/hot-reload/godot/test
        # Repeat a few times, our hot reload integration test can sometimes be a bit flaky.
        run: $RETRY ./run-test.sh
        shell: bash
